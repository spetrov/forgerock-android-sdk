

apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.8.12"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
    // see related issue https://github.com/gradle/gradle/issues/5184#issuecomment-457865951
}

task jacocoReport(type: JacocoReport, dependsOn: 'testDebugUnitTest') {
    reports {
        xml.required.set(true)
        html.required.set(true)

        html.destination file("${buildDir}/coverage-report")
        xml.destination file("${buildDir}/coverage-report/jacoco.xml")
    }

    // Setup the .class, source, and execution directories
    final fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', 'android/**/*.*']

    // Include this if you use Kotlin
    final kotlinTree = fileTree(dir: "${project.buildDir}/tmp/kotlin-classes/debug", excludes: fileFilter)
    final javacTree = fileTree(dir: "${project.buildDir}/intermediates/javac/debug", excludes: fileFilter)
    final mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.setFrom files([mainSrc])
    classDirectories.setFrom files([kotlinTree, javacTree])
    executionData.setFrom fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
    ])

}

