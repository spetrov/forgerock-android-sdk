name: Build and Test

# Trigger on push or pull request
on:
  pull_request:
    types: [opened, reopened, synchronize, edited]
    branches:
      - master
      - develop
  push:
    branches:
      - master
      - develop

jobs:
  build-and-test:
    runs-on: macos-latest
    steps:
      # Clone the repo
      - name: Clone the repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{github.event.pull_request.head.repo.full_name}}
          fetch-depth: 0

      # Setup JDK and cache and restore dependencies.
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
          cache: 'gradle'

      # Execute forgerock-core debug unit tests
      - name: Run forgerock-core debug unit tests
        run: ./gradlew :forgerock-core:testDebugUnitTest --stacktrace --no-daemon
        if: always()

      # Execute forgerock-auth debug unit tests
      - name: Run forgerock-auth debug unit tests
        run: ./gradlew :forgerock-auth:testDebugUnitTest --stacktrace --no-daemon
        if: always()

      # Execute forgerock-authenticator debug unit tests
      - name: Run forgerock-authenticator debug unit tests
        run: ./gradlew :forgerock-authenticator:testDebugUnitTest --stacktrace --no-daemon
        if: always()

      # Publish test reports for the unit tests
      - name: Publish test results
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Unit tests results
          path: 'forgerock-core/build/test-results/**/TEST-*.xml,forgerock-auth/build/test-results/**/TEST-*.xml,forgerock-authenticator/build/test-results/**/TEST-*.xml'
          list-suites: 'all'
          list-tests: 'all'
          fail-on-error: 'true'
          reporter: java-junit

      # # Send slack notification with result status
      # - uses: 8398a7/action-slack@v3
      #   with:
      #     mention: 'stoyan.petrov,andy.witrisna,jey.periyasamy'
      #     if_mention: 'failure,cancelled'
      #     fields: repo,author,eventName,message,job,pullRequest,took
      #     status: ${{ job.status }}
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
      #   if: always()
      
  run-instrumentation-tests:
    # needs: build-and-test
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        api-level: [27]
        target: [google_apis]
    steps:
      # Clone the repo
      - name: Clone the repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{github.event.pull_request.head.repo.full_name}}
          fetch-depth: 0

      # Setup JDK and cache and restore dependencies.
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
          cache: 'gradle'
      
      # AVD snapshot caching
      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      # Create AVD and generate snapshot for caching
      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      # Run instrumentation tests
      - name: Run instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew :forgerock-auth:connectedDebugAndroidTest --stacktrace --no-daemon

      # Publish test reports for the instrumentation tests
      - name: Instrumentation tests results (API ${{ matrix.api-level }})
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Instrumentation tests results (${{ matrix.api-level }})
          path: 'forgerock-auth/build/outputs/androidTest-results/connected/TEST-*.xml'
          list-suites: 'all'
          list-tests: 'all'
          fail-on-error: 'true'
          reporter: java-junit
  
  prepare-bitbar-artifacts:
    needs: [build-and-test, run-instrumentation-tests]
    runs-on: macos-latest
    steps:
      # Clone the repo
      - name: Clone the repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{github.event.pull_request.head.repo.full_name}}
          fetch-depth: 0

      # Setup JDK and cache and restore dependencies.
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
          cache: 'gradle'

      # Prepare BitBar artifacts
      - name: Prepare BitBar artifacts
        run: |
          ./gradlew assembleDebugAndroidTest --stacktrace --no-daemon

# apksigner sign --min-sdk-version 21 --max-sdk-version 31 --v1-signing-enabled true --v2-signing-enabled true --ks samples/debug.jks --ks-key-alias androiddebugkey --ks-pass pass:android -v samples/auth/build/outputs/apk/debug/auth-debug.apk
# apksigner sign --min-sdk-version 21 --max-sdk-version 31 --v1-signing-enabled true --v2-signing-enabled true --ks samples/debug.jks --ks-key-alias androiddebugkey --ks-pass pass:android -v forgerock-auth/build/outputs/apk/androidTest/debug/forgerock-auth-debug-androidTest.apk

      # Upload auth-debug-androidTest.apk artifact
      - name: Upload auth-debug-androidTest.apk artifact
        uses: actions/upload-artifact@v2 
        if: success()
        with:
          name: auth-debug-androidTest.apk
          path: samples/auth/build/outputs/apk/androidTest/debug/auth-debug-androidTest.apk

      # Upload forgerock-auth-debug-androidTest.apk artifact
      - name: Upload forgerock-auth-debug-androidTest.apk artifact
        uses: actions/upload-artifact@v2 
        if: success()
        with:
          name: forgerock-auth-debug-androidTest.apk
          path: forgerock-auth/build/outputs/apk/androidTest/debug/forgerock-auth-debug-androidTest.apk